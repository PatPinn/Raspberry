[
    {
        "id": "976098e7.8b8588",
        "type": "tab",
        "label": "Raspberry Pi Sense Hat"
    },
    {
        "id": "4af28ed7.3232e8",
        "type": "tab",
        "label": "Raspberry Monitoring"
    },
    {
        "id": "d2df1be4.d1d978",
        "type": "tab",
        "label": "Sense Hat Data"
    },
    {
        "id": "d6cc4457.4ee4c",
        "type": "tab",
        "label": "Sense Hat Led"
    },
    {
        "id": "5121be67.82a5",
        "type": "wiotp-credentials",
        "z": "",
        "name": "",
        "org": "y4njfz",
        "devType": "PiGateway",
        "devId": "TinyRebel-GW"
    },
    {
        "id": "362b8985.53da8e",
        "type": "wiotp-credentials",
        "z": "",
        "name": "",
        "org": "y4njfz",
        "devType": "PiGateway",
        "devId": "TinyRebel-GW"
    },
    {
        "id": "d9a8192f.e5fb5",
        "type": "wiotp-credentials",
        "z": "",
        "name": "PatRaspberry",
        "org": "iu5zj8",
        "devType": "PiGateway",
        "devId": "PatRaspberry"
    },
    {
        "id": "c3c92724.d4cb4",
        "type": "wiotp-credentials",
        "z": "",
        "name": "",
        "org": "y4njfz",
        "devType": "PiGateway",
        "devId": "TinyRebel-GW"
    },
    {
        "id": "40c3ff45.099cf",
        "type": "inject",
        "z": "4af28ed7.3232e8",
        "name": "Every 10s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "x": 123,
        "y": 173,
        "wires": [
            [
                "f6994c3.e5b943",
                "94de4ea.4ebe93",
                "daf821ff.63ec1",
                "75d11613.fe4038",
                "1145c2ce.a3b15d"
            ]
        ]
    },
    {
        "id": "f6994c3.e5b943",
        "type": "exec",
        "z": "4af28ed7.3232e8",
        "command": "vcgencmd measure_temp",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "CPU Temp",
        "x": 320,
        "y": 89,
        "wires": [
            [
                "fc9376a5.95ab38"
            ],
            [],
            []
        ]
    },
    {
        "id": "6dd8150f.02a5ec",
        "type": "debug",
        "z": "4af28ed7.3232e8",
        "name": "debug : Rasp Data",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 776.5,
        "y": 210.75,
        "wires": []
    },
    {
        "id": "fc9376a5.95ab38",
        "type": "function",
        "z": "4af28ed7.3232e8",
        "name": "Formt CPU temp",
        "func": "str = msg.payload; \nmsg.payload = str.substring(5,9);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 515,
        "y": 89.5,
        "wires": [
            [
                "6dd8150f.02a5ec",
                "b537df2b.ededd8"
            ]
        ]
    },
    {
        "id": "94de4ea.4ebe93",
        "type": "exec",
        "z": "4af28ed7.3232e8",
        "command": "top -d 0.5 -b -n2 | grep \"Cpu(s)\" | tail -n 1 | awk '{print $2 + $4}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "CPU Usage",
        "x": 330.5,
        "y": 175.75,
        "wires": [
            [
                "492cd94f.2f09a"
            ],
            [],
            []
        ]
    },
    {
        "id": "daf821ff.63ec1",
        "type": "exec",
        "z": "4af28ed7.3232e8",
        "command": "free | grep Mem | awk '{print 100*($3/$2)}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Mem Free",
        "x": 312.5,
        "y": 301.75,
        "wires": [
            [
                "2a1ee089.893ec"
            ],
            [],
            []
        ]
    },
    {
        "id": "b616fb33.cf83f",
        "type": "comment",
        "z": "4af28ed7.3232e8",
        "name": "Send Raspberry data to Watson IOT",
        "info": "",
        "x": 162,
        "y": 41,
        "wires": []
    },
    {
        "id": "b537df2b.ededd8",
        "type": "wiotp out",
        "z": "4af28ed7.3232e8",
        "authType": "g",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "d9a8192f.e5fb5",
        "deviceType": "SenseHat",
        "deviceId": "sensehat-pat",
        "event": "RaspCPUTemp",
        "format": "json",
        "name": "IoT : CPUTemp",
        "x": 821,
        "y": 55,
        "wires": []
    },
    {
        "id": "492cd94f.2f09a",
        "type": "function",
        "z": "4af28ed7.3232e8",
        "name": "Formt CPU usage",
        "func": "str = msg.payload;\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 527,
        "y": 171,
        "wires": [
            [
                "6dd8150f.02a5ec",
                "56163f80.6bec7"
            ]
        ]
    },
    {
        "id": "2a1ee089.893ec",
        "type": "function",
        "z": "4af28ed7.3232e8",
        "name": "Formt Mem Free",
        "func": "str = msg.payload;\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 525,
        "y": 297,
        "wires": [
            [
                "6dd8150f.02a5ec",
                "3735b4cd.e0e684"
            ]
        ]
    },
    {
        "id": "3735b4cd.e0e684",
        "type": "wiotp out",
        "z": "4af28ed7.3232e8",
        "authType": "g",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "d9a8192f.e5fb5",
        "deviceType": "SenseHat",
        "deviceId": "sensehat-pat",
        "event": "RaspMemFree",
        "format": "json",
        "name": "IoT : Mem Free",
        "x": 773,
        "y": 308,
        "wires": []
    },
    {
        "id": "56163f80.6bec7",
        "type": "wiotp out",
        "z": "4af28ed7.3232e8",
        "authType": "g",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "d9a8192f.e5fb5",
        "deviceType": "SenseHat",
        "deviceId": "sensehat-pat",
        "event": "RaspCPUUsage",
        "format": "json",
        "name": "IoT : CPU Uasge",
        "x": 769,
        "y": 162,
        "wires": []
    },
    {
        "id": "353117c1.83e118",
        "type": "inject",
        "z": "976098e7.8b8588",
        "name": "",
        "topic": "",
        "payload": "IBM IOT",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 148.5,
        "y": 61,
        "wires": [
            [
                "61daad96.c91344"
            ]
        ]
    },
    {
        "id": "787eb55b.f39d0c",
        "type": "rpi-sensehat out",
        "z": "976098e7.8b8588",
        "name": "PatRaspberry",
        "x": 653,
        "y": 74,
        "wires": []
    },
    {
        "id": "61daad96.c91344",
        "type": "function",
        "z": "976098e7.8b8588",
        "name": "IBM message startup",
        "func": "  msg.background=\"black\";\n  msg.color=\"blue\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420.5,
        "y": 77,
        "wires": [
            [
                "787eb55b.f39d0c",
                "41897cae.5e172c"
            ]
        ]
    },
    {
        "id": "74ce8491.43ed8c",
        "type": "comment",
        "z": "976098e7.8b8588",
        "name": "Show IBM IOT on Ã©sense Hat",
        "info": "",
        "x": 169,
        "y": 20,
        "wires": []
    },
    {
        "id": "75d11613.fe4038",
        "type": "exec",
        "z": "4af28ed7.3232e8",
        "command": "ifconfig wlan0 | grep \"inet addr:\" | awk '{print $2 \"<br>\\n\" $3 \"<br>\\n\" $4\"<br>\"}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "IP Addr",
        "x": 315,
        "y": 414,
        "wires": [
            [
                "612f72ff.d9425c"
            ],
            [],
            []
        ]
    },
    {
        "id": "c457e86.ebb4b98",
        "type": "wiotp out",
        "z": "4af28ed7.3232e8",
        "authType": "g",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "d9a8192f.e5fb5",
        "deviceType": "SenseHat",
        "deviceId": "sensehat-pat",
        "event": "RaspIP",
        "format": "json",
        "name": "IoT : IP info",
        "x": 763,
        "y": 411,
        "wires": []
    },
    {
        "id": "612f72ff.d9425c",
        "type": "function",
        "z": "4af28ed7.3232e8",
        "name": "Formt IP",
        "func": "str = msg.payload; \nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 412,
        "wires": [
            [
                "c457e86.ebb4b98"
            ]
        ]
    },
    {
        "id": "1145c2ce.a3b15d",
        "type": "exec",
        "z": "4af28ed7.3232e8",
        "command": "iwlist wlan0 scan | head -7 | tail -4 | awk '{print $1\" \"$2\" \"$3\" \"$4\" \"$5\"<br>\\n\"}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "WIFI",
        "x": 294,
        "y": 487,
        "wires": [
            [
                "982d2669.0ee7e"
            ],
            [],
            []
        ]
    },
    {
        "id": "32e7ce29.430482",
        "type": "wiotp out",
        "z": "4af28ed7.3232e8",
        "authType": "g",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "d9a8192f.e5fb5",
        "deviceType": "SenseHat",
        "deviceId": "sensehat-pat",
        "event": "RaspWIFI",
        "format": "json",
        "name": "IoT : WIFI Info",
        "x": 762,
        "y": 484,
        "wires": []
    },
    {
        "id": "982d2669.0ee7e",
        "type": "function",
        "z": "4af28ed7.3232e8",
        "name": "Formt WIFI",
        "func": "str = msg.payload;\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 499,
        "y": 485,
        "wires": [
            [
                "32e7ce29.430482"
            ]
        ]
    },
    {
        "id": "5f9a7ea7.c1a9b8",
        "type": "debug",
        "z": "d2df1be4.d1d978",
        "name": "debug : sense hat msg",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 871,
        "y": 267,
        "wires": []
    },
    {
        "id": "a3cae0cf.bef29",
        "type": "switch",
        "z": "d2df1be4.d1d978",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 663.5,
        "y": 258,
        "wires": [
            [
                "bd74f60c.ca1588",
                "5f9a7ea7.c1a9b8"
            ],
            []
        ]
    },
    {
        "id": "b0548a38.afcfa8",
        "type": "function",
        "z": "d2df1be4.d1d978",
        "name": "format : message Temp",
        "func": "// Format temp data for Sens hat led\nif (context.global.showtemp == true){\n  msg.background=\"black\";\n  msg.color=\"green\";\n  msg.speed=3;\n  temp= parseInt(msg.payload.temperature,0);\n  text=temp+\"c \"\n  msg.payload=text;\n} else {\n    msg.payload = 0;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 414,
        "y": 241,
        "wires": [
            [
                "a3cae0cf.bef29"
            ]
        ]
    },
    {
        "id": "869a1391.5ec33",
        "type": "function",
        "z": "d2df1be4.d1d978",
        "name": "format : message Humidity",
        "func": "if (context.global.showtemp == true){\n  msg.background=\"black\";\n  msg.color=\"blue\";\n  msg.speed=3;\n  humidity=parseInt(msg.payload.humidity,0);\n  text=humidity+\"%\"\n  msg.payload=text;\n} else {\n    msg.payload = 0;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 414,
        "y": 292,
        "wires": [
            [
                "a3cae0cf.bef29"
            ]
        ]
    },
    {
        "id": "bd74f60c.ca1588",
        "type": "rpi-sensehat out",
        "z": "d2df1be4.d1d978",
        "name": "PatRaspberry",
        "x": 815,
        "y": 354,
        "wires": []
    },
    {
        "id": "fbe6e0bb.681a3",
        "type": "delay",
        "z": "d2df1be4.d1d978",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 287,
        "y": 144,
        "wires": [
            [
                "b0548a38.afcfa8",
                "460cc4ae.2dccbc"
            ]
        ]
    },
    {
        "id": "460cc4ae.2dccbc",
        "type": "delay",
        "z": "d2df1be4.d1d978",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "7",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 191,
        "y": 292,
        "wires": [
            [
                "869a1391.5ec33"
            ]
        ]
    },
    {
        "id": "10fa0284.456e65",
        "type": "rpi-sensehat in",
        "z": "d2df1be4.d1d978",
        "name": "Env events",
        "motion": false,
        "env": true,
        "stick": false,
        "x": 100,
        "y": 110,
        "wires": [
            [
                "1475b8fd.e0a50f",
                "fbe6e0bb.681a3"
            ]
        ]
    },
    {
        "id": "1475b8fd.e0a50f",
        "type": "delay",
        "z": "d2df1be4.d1d978",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 335,
        "y": 84,
        "wires": [
            [
                "4c9b1fb9.a59538",
                "90715e50.67a178"
            ]
        ]
    },
    {
        "id": "4c9b1fb9.a59538",
        "type": "wiotp out",
        "z": "d2df1be4.d1d978",
        "authType": "g",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "d9a8192f.e5fb5",
        "deviceType": "SenseHat",
        "deviceId": "sensehat-pat",
        "event": "environment",
        "format": "json",
        "name": "IoT : environment",
        "x": 663,
        "y": 43,
        "wires": []
    },
    {
        "id": "90715e50.67a178",
        "type": "debug",
        "z": "d2df1be4.d1d978",
        "name": "debug : sense hat sensors",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 691,
        "y": 144,
        "wires": []
    },
    {
        "id": "9e7f33aa.674718",
        "type": "comment",
        "z": "d2df1be4.d1d978",
        "name": "Send Sense Hat data to Watson IOT",
        "info": "",
        "x": 159,
        "y": 33,
        "wires": []
    },
    {
        "id": "23bd7838.3db2f8",
        "type": "comment",
        "z": "d2df1be4.d1d978",
        "name": "Show Temp on Led",
        "info": "",
        "x": 107,
        "y": 191,
        "wires": []
    },
    {
        "id": "c7036c77.e2749",
        "type": "comment",
        "z": "d6cc4457.4ee4c",
        "name": "Show Message on Sense Hat Led",
        "info": "",
        "x": 171,
        "y": 55,
        "wires": []
    },
    {
        "id": "8e1b4bc.8cb5338",
        "type": "function",
        "z": "d6cc4457.4ee4c",
        "name": "Format message",
        "func": "// begin code\n\nd = msg.payload.d;\n\nif (msg.command == \"message\") { \n  msg.background=d.background;\n  msg.color=d.color;\n  msg.payload=d.message.message;\n}\nelse if (msg.command == \"alarm\") {\n  msg.payload=\"*,*,\" + d.color;\n} \nelse if (msg.command == \"smile\") {\n  msg.payload=msg.payload.pixel;\n} \nelse if (msg.command == \"showtemp\"){\n    if (msg.payload.showtemp==\"On\"){\n        context.global.showtemp = true;\n    } else {\n        context.global.showtemp = false;\n    }\n    msg = null;\n}\nelse{\n  msg = null;\n}\nreturn msg;\n\n// end code",
        "outputs": 1,
        "noerr": 0,
        "x": 361.5,
        "y": 121.75,
        "wires": [
            [
                "8dc380aa.17982",
                "1876f4d8.a20703"
            ]
        ]
    },
    {
        "id": "2ab46f9a.8eb4b8",
        "type": "exec",
        "z": "d6cc4457.4ee4c",
        "command": "python /home/pi/sense_hat_led.py",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Python Matrix led",
        "x": 311,
        "y": 396,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "73f1612f.44e208",
        "type": "inject",
        "z": "d6cc4457.4ee4c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 109.5,
        "y": 391.25,
        "wires": [
            [
                "2ab46f9a.8eb4b8"
            ]
        ]
    },
    {
        "id": "75049c11.dab524",
        "type": "comment",
        "z": "d6cc4457.4ee4c",
        "name": "Call a python code",
        "info": "",
        "x": 109,
        "y": 334,
        "wires": []
    },
    {
        "id": "5b7d4453.ef0644",
        "type": "rpi-sensehat in",
        "z": "d6cc4457.4ee4c",
        "name": "",
        "motion": false,
        "env": false,
        "stick": true,
        "x": 88,
        "y": 274,
        "wires": [
            [
                "16666b3c.cd8e6d"
            ]
        ]
    },
    {
        "id": "ccc6fcc2.d02ea8",
        "type": "comment",
        "z": "d6cc4457.4ee4c",
        "name": "Show IP addr on Sense Hat",
        "info": "",
        "x": 133,
        "y": 211,
        "wires": []
    },
    {
        "id": "16666b3c.cd8e6d",
        "type": "exec",
        "z": "d6cc4457.4ee4c",
        "command": "ifconfig wlan0 | grep 'inet addr:' | awk '{print $2}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "IP Addr",
        "x": 327,
        "y": 270,
        "wires": [
            [
                "f4a66c69.13b0c8"
            ],
            [],
            []
        ]
    },
    {
        "id": "1876f4d8.a20703",
        "type": "debug",
        "z": "d6cc4457.4ee4c",
        "name": "debug : sense hat msg",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 589,
        "y": 179,
        "wires": []
    },
    {
        "id": "8dc380aa.17982",
        "type": "rpi-sensehat out",
        "z": "d6cc4457.4ee4c",
        "name": "PatRaspberry",
        "x": 617,
        "y": 83,
        "wires": []
    },
    {
        "id": "e6ac4430.b99598",
        "type": "exec",
        "z": "976098e7.8b8588",
        "command": "sudo ",
        "addpay": true,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Command",
        "x": 323.5,
        "y": 246,
        "wires": [
            [
                "c2e93c70.b57ce8",
                "512d05ec.236eac"
            ],
            [],
            []
        ]
    },
    {
        "id": "c2e93c70.b57ce8",
        "type": "debug",
        "z": "976098e7.8b8588",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 488,
        "y": 284.5,
        "wires": []
    },
    {
        "id": "1e2344e5.d70ddb",
        "type": "comment",
        "z": "976098e7.8b8588",
        "name": "Execute command",
        "info": "",
        "x": 139,
        "y": 190,
        "wires": []
    },
    {
        "id": "35191ea4.9e023a",
        "type": "wiotp in",
        "z": "976098e7.8b8588",
        "authType": "g",
        "deviceKey": "d9a8192f.e5fb5",
        "deviceType": "SenseHat",
        "deviceId": "sensehat-pat",
        "command": "+",
        "commandType": "d",
        "name": "Commandes",
        "x": 98,
        "y": 306,
        "wires": [
            [
                "88e162b3.480678"
            ]
        ]
    },
    {
        "id": "88e162b3.480678",
        "type": "switch",
        "z": "976098e7.8b8588",
        "name": "Command reboot",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "command",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 3,
        "x": 274,
        "y": 387.5,
        "wires": [
            [
                "292d829.6a1c97e"
            ],
            [
                "c2e93c70.b57ce8",
                "19fd4ac0.4844d5"
            ],
            [
                "33460f0a.586aa8"
            ]
        ]
    },
    {
        "id": "292d829.6a1c97e",
        "type": "exec",
        "z": "976098e7.8b8588",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "reboot",
        "x": 504.5,
        "y": 387.75,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "33460f0a.586aa8",
        "type": "link out",
        "z": "976098e7.8b8588",
        "name": "led",
        "links": [
            "1529b90f.5778f7"
        ],
        "x": 503.5,
        "y": 479.5,
        "wires": []
    },
    {
        "id": "1529b90f.5778f7",
        "type": "link in",
        "z": "d6cc4457.4ee4c",
        "name": "led",
        "links": [
            "33460f0a.586aa8"
        ],
        "x": 176.5,
        "y": 123.25,
        "wires": [
            [
                "8e1b4bc.8cb5338"
            ]
        ]
    },
    {
        "id": "512d05ec.236eac",
        "type": "function",
        "z": "976098e7.8b8588",
        "name": "Formt result",
        "func": "str = msg.payload;\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 213,
        "wires": [
            [
                "a5cc877c.ec0c2"
            ]
        ]
    },
    {
        "id": "a5cc877c.ec0c2",
        "type": "wiotp out",
        "z": "976098e7.8b8588",
        "authType": "g",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "d9a8192f.e5fb5",
        "deviceType": "SenseHat",
        "deviceId": "sensehat-pat",
        "event": "CommandResult",
        "format": "json",
        "name": "IoT : Command Result",
        "x": 688,
        "y": 211,
        "wires": []
    },
    {
        "id": "19fd4ac0.4844d5",
        "type": "function",
        "z": "976098e7.8b8588",
        "name": "Formt Command",
        "func": "str = msg.payload.command.Command;\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 299,
        "y": 305,
        "wires": [
            [
                "e6ac4430.b99598",
                "c2e93c70.b57ce8"
            ]
        ]
    },
    {
        "id": "7e55deec.2ea378",
        "type": "rpi-sensehat in",
        "z": "d2df1be4.d1d978",
        "name": "Motion",
        "motion": true,
        "env": false,
        "stick": false,
        "x": 140,
        "y": 404,
        "wires": [
            [
                "8d1d7fac.9d798"
            ]
        ]
    },
    {
        "id": "df20ea51.3cd4c",
        "type": "debug",
        "z": "d2df1be4.d1d978",
        "name": "Motion",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 815.5,
        "y": 432,
        "wires": []
    },
    {
        "id": "eac018c0.e32248",
        "type": "rpi-sensehat out",
        "z": "d6cc4457.4ee4c",
        "name": "PatRaspberry",
        "x": 742,
        "y": 269,
        "wires": []
    },
    {
        "id": "41897cae.5e172c",
        "type": "debug",
        "z": "976098e7.8b8588",
        "name": "debug : sense hat msg",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 647,
        "y": 141,
        "wires": []
    },
    {
        "id": "f4a66c69.13b0c8",
        "type": "function",
        "z": "d6cc4457.4ee4c",
        "name": "Format message",
        "func": "// begin code\nIP = msg.payload\nIP_l = IP.length;\n  msg.background=\"black\";\n  msg.color=\"blue\";\n  msg.payload=IP.substring(5,IP_l-2);\nreturn msg;\n\n// end code",
        "outputs": 1,
        "noerr": 0,
        "x": 511,
        "y": 272,
        "wires": [
            [
                "eac018c0.e32248",
                "1876f4d8.a20703"
            ]
        ]
    },
    {
        "id": "d3744914.95ceb8",
        "type": "function",
        "z": "d6cc4457.4ee4c",
        "name": "Marble Maze",
        "func": "// A Function to generate a new goal position\nfunction updateGoal() {\n do {\n goalX = Math.floor(Math.random()*7)+1;\n goalY = Math.floor(Math.random()*7)+1;\n } while(checkWall(goalX,goalY));\n \n flow.set('goalX',goalX);\n flow.set('goalY',goalY); \n}\n\n// Generate 'walls' - 10 randomly placed blocks\nfunction generateWalls() {\n walls = [];\n for (var i=0;i<10;i++) {\n var wx = 0;\n var wy = 0;\n do {\n wx = Math.floor(Math.random()*8);\n wy = Math.floor(Math.random()*8);\n } while(wx === x && wy === y);\n walls.push({x:wx,y:wy});\n }\n flow.set('walls',walls);\n}\n\n// Check whether a given position collides with any of the walls\nfunction checkWall(x,y) {\n for (var i=0;i<walls.length;i++) {\n if (walls[i].x === x && walls[i].y === y) {\n return true;\n }\n }\n return false;\n}\n\n// Retrieve the current player positions from local context\nvar x = context.get('x');\nvar y = context.get('y');\n\n// Retrieve the current goal position from flow context\nvar goalX = flow.get('goalX');\nvar goalY = flow.get('goalY');\n\n// Retrieve the current walls from flow context\nvar walls = flow.get('walls');\n\n// Generate new walls if needed\nif (!walls) {\n generateWalls();\n}\n\n// Generate a new goal if needed\nif (isNaN(goalX) || isNaN(goalY)) {\n updateGoal();\n}\n\n\nvar moved = false;\nvar ox = x;\nvar oy = y;\n\n// Initialise the player position\nif (isNaN(x) || isNaN(y)) {\n ox = 3;\n oy = 3;\n x = 3;\n y = 3;\n moved = true;\n} else {\n // Retrieve the current roll & pitch from the message\n // arriving from the SenseHAT\n var roll = msg.payload.orientation.roll;\n var pitch = msg.payload.orientation.pitch;\n\n // Move the player based on tilt, ensuring it stays\n // within the bounds of the screen\n var sensitivity = 7;\n if (roll > sensitivity && roll < 90) {\n y += 1;\n moved = true;\n if (y > 6) { y = 7; }\n } else if (roll < 360-sensitivity && roll > 270) {\n y -= 1;\n moved = true;\n if (y < 1) { y = 0; }\n }\n if (pitch > sensitivity && pitch < 90) {\n x -= 1;\n moved = true;\n if (x < 1) { x = 0; }\n } else if (pitch < 360-sensitivity && pitch > 270) {\n x += 1;\n moved = true;\n if (x > 6) { x = 7; }\n }\n // If the resultant position hits a wall, go back to\n // where it started\n if (checkWall(x,y)) {\n x = ox;\n y = oy;\n }\n}\n\n// Store the new player position\ncontext.set('x',x);\ncontext.set('y',y);\n\nif (moved) {\n // If the player is on the goal, generate a new set of\n // walls and goal position\n if (x === goalX && y === goalY) {\n generateWalls();\n updateGoal();\n // Blank the display\n msg.payload = \"*,*,off,\";\n } else {\n // Blank the old position of the player\n msg.payload = ox+\",\"+oy+\",off,\";\n }\n // Draw each of the walls\n for (var i =0;i<walls.length;i++) {\n msg.payload += walls[i].x+\",\"+walls[i].y+\",green,\";\n }\n // Draw the goal and player position\n msg.payload += goalX+\",\"+goalY+\",blue,\"+x+\",\"+y+\",red\";\n\n // Pass the message on to the SenseHAT Out node\n return msg;\n}\n\n// Nothing has moved so no need to update screen - return nothing\nreturn null;",
        "outputs": "1",
        "noerr": 0,
        "x": 594,
        "y": 445,
        "wires": [
            []
        ]
    },
    {
        "id": "8d1d7fac.9d798",
        "type": "delay",
        "z": "d2df1be4.d1d978",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 296,
        "y": 404,
        "wires": [
            [
                "4f577d58.650fb4"
            ]
        ]
    },
    {
        "id": "4f577d58.650fb4",
        "type": "function",
        "z": "d2df1be4.d1d978",
        "name": "format : acceleration",
        "func": "acceleration = msg.payload.acceleration.x;\n//acceleration += msg.payload.acceleration.y;\n//acceleration += msg.payload.acceleration.z;\nmsg.payload = acceleration\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 515,
        "y": 384,
        "wires": [
            [
                "87ad3f13.9e5938"
            ]
        ]
    },
    {
        "id": "87ad3f13.9e5938",
        "type": "switch",
        "z": "d2df1be4.d1d978",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 624.5,
        "y": 488,
        "wires": [
            [
                "df20ea51.3cd4c"
            ],
            []
        ]
    }
]